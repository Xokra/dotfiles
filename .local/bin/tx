#!/bin/bash

# Function to check if tmux server is running
tmux_running() {
    tmux list-sessions &>/dev/null
}

# Function to get the last active session
get_last_active_session() {
    # Get sessions sorted by activity time (most recent first)
    tmux list-sessions -F "#{session_last_attached} #{session_name}" | \
    sort -rn | \
    head -n 1 | \
    awk '{print $2}'
}

# Main logic for automatic restoration
if tmux_running; then
    # Tmux server is running, get the last active session

    last_session=$(get_last_active_session)
    
    if [ -n "$last_session" ]; then
        echo "Attaching to last active session: $last_session"
        tmux attach-session -t "$last_session"
    else
        # Fallback to first available session
        existing_session=$(tmux list-sessions -F "#{session_name}" | head -n 1)
        echo "Attaching to session: $existing_session"
        tmux attach-session -t "$existing_session"
    fi
else
    # No tmux server running - start and restore
    echo "Starting tmux and restoring last session..."
    
    # Start tmux server with a temporary session
    tmux new-session -d -s temp
    
    # Let continuum automatically restore (it runs on server start)
    sleep 3
    
    # Check if continuum restored any sessions
    restored_sessions=$(tmux list-sessions -F "#{session_name}" | grep -v "^temp$")
    
    if [ -n "$restored_sessions" ]; then
        # Sessions were restored! Get the last active one
        tmux kill-session -t temp
        

        # Get the last active session from the restored ones
        last_session=$(get_last_active_session)
        echo "Restored sessions. Attaching to last active: $last_session"
        tmux attach-session -t "$last_session"
    else
        # No sessions were restored, rename temp to main and use it
        tmux rename-session -t temp main

        tmux attach-session -t main
    fi
fi
